// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification/notification.proto

package notification

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//QueueRequest for Queue Request with these defined requirements
type QueueRequest struct {
	ProfileID            string            `protobuf:"bytes,1,opt,name=profileID,proto3" json:"profileID,omitempty"`
	MessageTemplete      string            `protobuf:"bytes,2,opt,name=messageTemplete,proto3" json:"messageTemplete,omitempty"`
	Language             string            `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	MessageVariables     map[string]string `protobuf:"bytes,4,rep,name=messageVariables,proto3" json:"messageVariables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Channel              string            `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Autosend             string            `protobuf:"bytes,6,opt,name=autosend,proto3" json:"autosend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *QueueRequest) Reset()         { *m = QueueRequest{} }
func (m *QueueRequest) String() string { return proto.CompactTextString(m) }
func (*QueueRequest) ProtoMessage()    {}
func (*QueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{0}
}

func (m *QueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueRequest.Unmarshal(m, b)
}
func (m *QueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueRequest.Marshal(b, m, deterministic)
}
func (m *QueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueRequest.Merge(m, src)
}
func (m *QueueRequest) XXX_Size() int {
	return xxx_messageInfo_QueueRequest.Size(m)
}
func (m *QueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueRequest proto.InternalMessageInfo

func (m *QueueRequest) GetProfileID() string {
	if m != nil {
		return m.ProfileID
	}
	return ""
}

func (m *QueueRequest) GetMessageTemplete() string {
	if m != nil {
		return m.MessageTemplete
	}
	return ""
}

func (m *QueueRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *QueueRequest) GetMessageVariables() map[string]string {
	if m != nil {
		return m.MessageVariables
	}
	return nil
}

func (m *QueueRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *QueueRequest) GetAutosend() string {
	if m != nil {
		return m.Autosend
	}
	return ""
}

type StatusRequest struct {
	NotificationID       string   `protobuf:"bytes,1,opt,name=notificationID,proto3" json:"notificationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{1}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

func (m *StatusRequest) GetNotificationID() string {
	if m != nil {
		return m.NotificationID
	}
	return ""
}

type StatusResponse struct {
	NotificationID       string   `protobuf:"bytes,1,opt,name=notificationID,proto3" json:"notificationID,omitempty"`
	MessageStatus        string   `protobuf:"bytes,2,opt,name=messageStatus,proto3" json:"messageStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{2}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetNotificationID() string {
	if m != nil {
		return m.NotificationID
	}
	return ""
}

func (m *StatusResponse) GetMessageStatus() string {
	if m != nil {
		return m.MessageStatus
	}
	return ""
}

type ReleaseRequest struct {
	NotificationID       string   `protobuf:"bytes,1,opt,name=notificationID,proto3" json:"notificationID,omitempty"`
	ReleaseMessage       string   `protobuf:"bytes,2,opt,name=releaseMessage,proto3" json:"releaseMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseRequest) Reset()         { *m = ReleaseRequest{} }
func (m *ReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseRequest) ProtoMessage()    {}
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{3}
}

func (m *ReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseRequest.Unmarshal(m, b)
}
func (m *ReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseRequest.Merge(m, src)
}
func (m *ReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseRequest.Size(m)
}
func (m *ReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseRequest proto.InternalMessageInfo

func (m *ReleaseRequest) GetNotificationID() string {
	if m != nil {
		return m.NotificationID
	}
	return ""
}

func (m *ReleaseRequest) GetReleaseMessage() string {
	if m != nil {
		return m.ReleaseMessage
	}
	return ""
}

type IncomeRequest struct {
	ProfileID            string            `protobuf:"bytes,1,opt,name=profileID,proto3" json:"profileID,omitempty"`
	ProductID            string            `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`
	MessageType          string            `protobuf:"bytes,3,opt,name=messageType,proto3" json:"messageType,omitempty"`
	Language             string            `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	RequestStatus        string            `protobuf:"bytes,5,opt,name=requestStatus,proto3" json:"requestStatus,omitempty"`
	PayLoad              map[string]string `protobuf:"bytes,6,rep,name=payLoad,proto3" json:"payLoad,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IncomeRequest) Reset()         { *m = IncomeRequest{} }
func (m *IncomeRequest) String() string { return proto.CompactTextString(m) }
func (*IncomeRequest) ProtoMessage()    {}
func (*IncomeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{4}
}

func (m *IncomeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncomeRequest.Unmarshal(m, b)
}
func (m *IncomeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncomeRequest.Marshal(b, m, deterministic)
}
func (m *IncomeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncomeRequest.Merge(m, src)
}
func (m *IncomeRequest) XXX_Size() int {
	return xxx_messageInfo_IncomeRequest.Size(m)
}
func (m *IncomeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncomeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncomeRequest proto.InternalMessageInfo

func (m *IncomeRequest) GetProfileID() string {
	if m != nil {
		return m.ProfileID
	}
	return ""
}

func (m *IncomeRequest) GetProductID() string {
	if m != nil {
		return m.ProductID
	}
	return ""
}

func (m *IncomeRequest) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *IncomeRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *IncomeRequest) GetRequestStatus() string {
	if m != nil {
		return m.RequestStatus
	}
	return ""
}

func (m *IncomeRequest) GetPayLoad() map[string]string {
	if m != nil {
		return m.PayLoad
	}
	return nil
}

type SearchRequest struct {
	NotificationID       string   `protobuf:"bytes,1,opt,name=notificationID,proto3" json:"notificationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{5}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetNotificationID() string {
	if m != nil {
		return m.NotificationID
	}
	return ""
}

type SearchResponse struct {
	NotificationID       string            `protobuf:"bytes,1,opt,name=notificationID,proto3" json:"notificationID,omitempty"`
	ProfileID            string            `protobuf:"bytes,2,opt,name=profileID,proto3" json:"profileID,omitempty"`
	ProductID            string            `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`
	Language             string            `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	MessageType          string            `protobuf:"bytes,5,opt,name=messageType,proto3" json:"messageType,omitempty"`
	PayLoad              map[string]string `protobuf:"bytes,6,rep,name=payLoad,proto3" json:"payLoad,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestStatus        string            `protobuf:"bytes,7,opt,name=requestStatus,proto3" json:"requestStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff76f27cb6af8e56, []int{6}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetNotificationID() string {
	if m != nil {
		return m.NotificationID
	}
	return ""
}

func (m *SearchResponse) GetProfileID() string {
	if m != nil {
		return m.ProfileID
	}
	return ""
}

func (m *SearchResponse) GetProductID() string {
	if m != nil {
		return m.ProductID
	}
	return ""
}

func (m *SearchResponse) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *SearchResponse) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *SearchResponse) GetPayLoad() map[string]string {
	if m != nil {
		return m.PayLoad
	}
	return nil
}

func (m *SearchResponse) GetRequestStatus() string {
	if m != nil {
		return m.RequestStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*QueueRequest)(nil), "notification.QueueRequest")
	proto.RegisterMapType((map[string]string)(nil), "notification.QueueRequest.MessageVariablesEntry")
	proto.RegisterType((*StatusRequest)(nil), "notification.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "notification.StatusResponse")
	proto.RegisterType((*ReleaseRequest)(nil), "notification.ReleaseRequest")
	proto.RegisterType((*IncomeRequest)(nil), "notification.IncomeRequest")
	proto.RegisterMapType((map[string]string)(nil), "notification.IncomeRequest.PayLoadEntry")
	proto.RegisterType((*SearchRequest)(nil), "notification.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "notification.SearchResponse")
	proto.RegisterMapType((map[string]string)(nil), "notification.SearchResponse.PayLoadEntry")
}

func init() { proto.RegisterFile("notification/notification.proto", fileDescriptor_ff76f27cb6af8e56) }

var fileDescriptor_ff76f27cb6af8e56 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0xd3, 0xb5, 0x65, 0x67, 0x6d, 0x98, 0x0c, 0x48, 0x51, 0x98, 0x44, 0x15, 0x4d, 0xa8,
	0xdc, 0x94, 0x69, 0x5c, 0x80, 0x76, 0x33, 0x69, 0xdd, 0x2e, 0x2a, 0xf1, 0xdb, 0x21, 0x2e, 0x10,
	0x42, 0x78, 0xd9, 0x59, 0x17, 0x91, 0x3a, 0x21, 0xb6, 0x27, 0xf5, 0xa9, 0x78, 0x10, 0x9e, 0x80,
	0x57, 0xe0, 0x29, 0x50, 0x6a, 0x7b, 0x8b, 0x9d, 0xb2, 0xb5, 0xe2, 0xae, 0xe7, 0xe4, 0x9c, 0xe3,
	0xef, 0x7c, 0xdf, 0xe7, 0x1a, 0x9e, 0xb0, 0x4c, 0x24, 0x17, 0x49, 0x4c, 0x45, 0x92, 0xb1, 0xe7,
	0xd5, 0x60, 0x98, 0x17, 0x99, 0xc8, 0x48, 0xb7, 0x9a, 0x8b, 0x7e, 0x79, 0xd0, 0xfd, 0x20, 0x51,
	0xe2, 0x04, 0x7f, 0x48, 0xe4, 0x82, 0xec, 0xc0, 0x66, 0x5e, 0x64, 0x17, 0x49, 0x8a, 0xe3, 0xe3,
	0xa0, 0xd1, 0x6f, 0x0c, 0x36, 0x27, 0x37, 0x09, 0x32, 0x80, 0xfb, 0x33, 0xe4, 0x9c, 0x4e, 0xf1,
	0x23, 0xce, 0xf2, 0x14, 0x05, 0x06, 0xde, 0xa2, 0xc6, 0x4d, 0x93, 0x10, 0xee, 0xa5, 0x94, 0x4d,
	0x25, 0x9d, 0x62, 0xd0, 0x5c, 0x94, 0x5c, 0xc7, 0xe4, 0x0b, 0x6c, 0xeb, 0xf2, 0x4f, 0xb4, 0x48,
	0xe8, 0x59, 0x8a, 0x3c, 0xd8, 0xe8, 0x37, 0x07, 0x5b, 0xfb, 0x7b, 0x43, 0x0b, 0x71, 0x15, 0xd9,
	0xf0, 0x8d, 0xd3, 0x72, 0xc2, 0x44, 0x31, 0x9f, 0xd4, 0x26, 0x91, 0x00, 0x3a, 0xf1, 0x25, 0x65,
	0x0c, 0xd3, 0xa0, 0xb5, 0x38, 0xd8, 0x84, 0x25, 0x26, 0x2a, 0x45, 0xc6, 0x91, 0x9d, 0x07, 0x6d,
	0x85, 0xc9, 0xc4, 0xe1, 0x08, 0x1e, 0x2d, 0x3d, 0x80, 0x6c, 0x43, 0xf3, 0x3b, 0xce, 0x35, 0x15,
	0xe5, 0x4f, 0xf2, 0x10, 0x5a, 0x57, 0x34, 0x95, 0x66, 0x75, 0x15, 0x1c, 0x78, 0xaf, 0x1a, 0xd1,
	0x4b, 0xe8, 0x9d, 0x0a, 0x2a, 0x24, 0x37, 0x6c, 0x3e, 0x05, 0xbf, 0xba, 0xd0, 0x35, 0xa5, 0x4e,
	0x36, 0xfa, 0x0a, 0xbe, 0x69, 0xe4, 0x79, 0xc6, 0x38, 0xae, 0xda, 0x49, 0x76, 0xa1, 0xa7, 0x19,
	0x50, 0x03, 0x34, 0x28, 0x3b, 0x19, 0x7d, 0x03, 0x7f, 0x82, 0x29, 0x52, 0x8e, 0x6b, 0x22, 0x2b,
	0xeb, 0x0a, 0xd5, 0xa9, 0xe9, 0xd1, 0x07, 0x38, 0xd9, 0xe8, 0xa7, 0x07, 0xbd, 0x31, 0x8b, 0xb3,
	0xd9, 0x8a, 0x4e, 0x52, 0x5f, 0xcf, 0x65, 0x2c, 0xc6, 0xc7, 0x7a, 0xe4, 0x4d, 0x82, 0xf4, 0x61,
	0xcb, 0x18, 0x6a, 0x9e, 0x1b, 0x03, 0x55, 0x53, 0x96, 0xbf, 0x36, 0x1c, 0x7f, 0xed, 0x42, 0xaf,
	0x50, 0x20, 0x34, 0x27, 0xca, 0x07, 0x76, 0x92, 0x1c, 0x41, 0x27, 0xa7, 0xf3, 0xd7, 0x19, 0x2d,
	0xcd, 0x50, 0x9a, 0x6f, 0x60, 0x9b, 0xcf, 0xda, 0x66, 0xf8, 0x5e, 0x95, 0x2a, 0xd3, 0x99, 0xc6,
	0xf0, 0x00, 0xba, 0xd5, 0x0f, 0x6b, 0x9b, 0x05, 0x69, 0x11, 0x5f, 0xae, 0x6b, 0x96, 0xdf, 0x1e,
	0xf8, 0xa6, 0x73, 0x4d, 0xb7, 0x58, 0x9a, 0x78, 0xb7, 0x6a, 0xd2, 0x74, 0x35, 0xb9, 0x8d, 0x71,
	0x47, 0xaf, 0x56, 0x5d, 0xaf, 0x91, 0xcb, 0xf6, 0x33, 0x9b, 0x6d, 0x7b, 0xa1, 0xe5, 0x74, 0xd7,
	0x85, 0xed, 0x2c, 0x11, 0xf6, 0x7f, 0x44, 0xd9, 0xff, 0xe3, 0xc1, 0x83, 0xb7, 0x15, 0x5c, 0xa7,
	0x58, 0x5c, 0x25, 0x31, 0x92, 0x43, 0x68, 0xbe, 0x93, 0x82, 0x84, 0xff, 0xfe, 0x7f, 0x0a, 0x77,
	0x9c, 0x85, 0xec, 0xfb, 0x3c, 0x82, 0xb6, 0xf6, 0xdd, 0xe3, 0xe5, 0x75, 0xab, 0x0c, 0x39, 0x81,
	0x8e, 0xbe, 0xc6, 0xc4, 0x29, 0xb4, 0x6f, 0xf7, 0x1d, 0x63, 0x0e, 0xc1, 0x1b, 0x33, 0x17, 0x87,
	0x65, 0xf7, 0x3b, 0x71, 0xb4, 0x95, 0x5e, 0xb5, 0x65, 0xaa, 0x86, 0xae, 0x0d, 0xb1, 0x24, 0xde,
	0x6b, 0x1c, 0xf9, 0x9f, 0xad, 0xc7, 0xe8, 0xac, 0xbd, 0x78, 0xa1, 0x5e, 0xfc, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xa3, 0x11, 0x3e, 0x58, 0xc4, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	//Out method for queueing massages as requested
	Out(ctx context.Context, in *QueueRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	//CommunicationStatus request to determine if notification is prepared or released
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	//QueueRelease method for releasing queued massages and returns if notification status if released
	Release(ctx context.Context, in *ReleaseRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	//In method is for client request for particular notification respones from system
	In(ctx context.Context, in *IncomeRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	//Search method is for client request for particular notification details from system
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (NotificationService_SearchClient, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) Out(ctx context.Context, in *QueueRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/notification.NotificationService/Out", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/notification.NotificationService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) Release(ctx context.Context, in *ReleaseRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/notification.NotificationService/Release", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) In(ctx context.Context, in *IncomeRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/notification.NotificationService/In", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (NotificationService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NotificationService_serviceDesc.Streams[0], "/notification.NotificationService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &notificationServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NotificationService_SearchClient interface {
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type notificationServiceSearchClient struct {
	grpc.ClientStream
}

func (x *notificationServiceSearchClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	//Out method for queueing massages as requested
	Out(context.Context, *QueueRequest) (*StatusResponse, error)
	//CommunicationStatus request to determine if notification is prepared or released
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	//QueueRelease method for releasing queued massages and returns if notification status if released
	Release(context.Context, *ReleaseRequest) (*StatusResponse, error)
	//In method is for client request for particular notification respones from system
	In(context.Context, *IncomeRequest) (*StatusResponse, error)
	//Search method is for client request for particular notification details from system
	Search(*SearchRequest, NotificationService_SearchServer) error
}

// UnimplementedNotificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationServiceServer struct {
}

func (*UnimplementedNotificationServiceServer) Out(ctx context.Context, req *QueueRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Out not implemented")
}
func (*UnimplementedNotificationServiceServer) Status(ctx context.Context, req *StatusRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedNotificationServiceServer) Release(ctx context.Context, req *ReleaseRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Release not implemented")
}
func (*UnimplementedNotificationServiceServer) In(ctx context.Context, req *IncomeRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method In not implemented")
}
func (*UnimplementedNotificationServiceServer) Search(req *SearchRequest, srv NotificationService_SearchServer) error {
	return status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_Out_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).Out(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.NotificationService/Out",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).Out(ctx, req.(*QueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.NotificationService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_Release_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).Release(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.NotificationService/Release",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).Release(ctx, req.(*ReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_In_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncomeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).In(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.NotificationService/In",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).In(ctx, req.(*IncomeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NotificationServiceServer).Search(m, &notificationServiceSearchServer{stream})
}

type NotificationService_SearchServer interface {
	Send(*SearchResponse) error
	grpc.ServerStream
}

type notificationServiceSearchServer struct {
	grpc.ServerStream
}

func (x *notificationServiceSearchServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notification.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Out",
			Handler:    _NotificationService_Out_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _NotificationService_Status_Handler,
		},
		{
			MethodName: "Release",
			Handler:    _NotificationService_Release_Handler,
		},
		{
			MethodName: "In",
			Handler:    _NotificationService_In_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _NotificationService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "notification/notification.proto",
}
